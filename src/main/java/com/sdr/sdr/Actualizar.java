/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sdr.sdr;

import com.mongodb.Block;
import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.model.Filters;
import com.mongodb.client.model.Updates;
import static com.sdr.sdr.Login.fecha;
import static com.sdr.sdr.Main.db;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import org.bson.Document;

/**
 *
 * @author berna
 */
public class Actualizar extends javax.swing.JFrame {

    /**
     * Creates new form Actualizar
     */
    String codigo;
    public Actualizar(String codigo) {
        initComponents();
        setLocationRelativeTo(null);
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                INVENTARIO n = new INVENTARIO();
                n.setVisible(true);
            }
        });
        this.codigo=codigo;
        recuperarDatos(codigo);
        jLabel9.setText(fecha);
        Timer tiempo=new Timer(100,new Actualizar.hora());
        tiempo.start();
    }
    
    class hora implements ActionListener{

        @Override
        public void actionPerformed(ActionEvent ae) {
            Date hora=new Date();
            String pmam="hh:mm:ss a";
            SimpleDateFormat format=new SimpleDateFormat(pmam);
            Calendar hoy=Calendar.getInstance();
            jLabel10.setText(String.format(format.format(hora),hoy));
        }
        
    }

    void recuperarDatos(String codigo) {
        FindIterable<Document> iterable = db.getCollection("productos").find(new Document("CODIGO", codigo));
        // Iterate the results and apply a block to each resulting document.
        // Iteramos los resultados y aplicacimos un bloque para cada documento.
        iterable.forEach(new Block<Document>() {
            @Override
            
            
            public void apply(final Document document) {
                TxtArticulo.setText((String) document.get("ARTICULO"));
                TxtTipo.setText((String) document.get("TIPO"));

                Document qty = (Document) document.get("STOCK");
                double min = (double) qty.get("MINIMO");
                int minimo = (int) min;
                double act = (double) qty.get("ACTUAL");
                int actual = (int) act;
                TxtStockMin.setText("" + minimo);
                TxtStockActual.setText("" + actual);

                double costo = (double) document.get("COSTO");
                double precio = (double) document.get("PRECIO");
                TxtCosto.setText("" + costo);
                TxtPrecio.setText("" + precio);
            }
              /*public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("Media/flame.png"));


        return retValue;
    }*/
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        TxtStockMin = new javax.swing.JTextField();
        TxtArticulo = new javax.swing.JTextField();
        TxtTipo = new javax.swing.JTextField();
        TxtStockActual = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        TxtCosto = new javax.swing.JTextField();
        BtnAceptar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        TxtPrecio = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        setSize(new java.awt.Dimension(600, 400));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setText("Tipo:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, -1, -1));

        jLabel5.setText("Stock mínimo:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));

        jLabel6.setText("Stock actual:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, -1));

        jLabel1.setText("Artículo:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        TxtStockMin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtStockMinKeyTyped(evt);
            }
        });
        getContentPane().add(TxtStockMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, 406, -1));
        getContentPane().add(TxtArticulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 410, -1));
        getContentPane().add(TxtTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 406, -1));

        TxtStockActual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtStockActualKeyTyped(evt);
            }
        });
        getContentPane().add(TxtStockActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 210, 406, -1));

        jLabel7.setText("Costo:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, -1, -1));

        TxtCosto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtCostoKeyTyped(evt);
            }
        });
        getContentPane().add(TxtCosto, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, 151, -1));

        BtnAceptar.setText("Aceptar");
        BtnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAceptarActionPerformed(evt);
            }
        });
        getContentPane().add(BtnAceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 370, 182, -1));

        jLabel8.setText("Precio de venta:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 250, -1, -1));

        TxtPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtPrecioKeyTyped(evt);
            }
        });
        getContentPane().add(TxtPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 240, 148, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ACTUALIZAR");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 180, 30));

        jLabel9.setText("jLabel5");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 320, 120, -1));

        jLabel10.setText("jLabel6");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 320, 110, -1));

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SDR.png"))); // NOI18N
        getContentPane().add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TxtStockMinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtStockMinKeyTyped
        char caracter = evt.getKeyChar();
        if (caracter < '0' || caracter > '9') {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_TxtStockMinKeyTyped

    private void TxtStockActualKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtStockActualKeyTyped
        char caracter = evt.getKeyChar();
        if (caracter < '0' || caracter > '9') {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_TxtStockActualKeyTyped

    private void TxtCostoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtCostoKeyTyped
        char caracter = evt.getKeyChar();
        if (((caracter < '0') || (caracter > '9'))
                && (caracter != KeyEvent.VK_BACK_SPACE)
                && (caracter != '.' || TxtCosto.getText().contains("."))) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_TxtCostoKeyTyped

    private void BtnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAceptarActionPerformed
    if (!valido()) {
            return;
        }
        MongoCollection<Document> collection = db.getCollection("productos");
               double costo = Double.parseDouble(TxtCosto.getText());
                double precio = Double.parseDouble(TxtPrecio.getText());
                double minimo = Double.parseDouble(TxtStockMin.getText());
                double actual = Double.parseDouble(TxtStockActual.getText());     
               collection.updateOne(Filters.eq("CODIGO",this.codigo),Updates.set("TIPO",TxtTipo.getText().toUpperCase()));
               collection.updateOne(Filters.eq("CODIGO",this.codigo),Updates.set("ARTICULO",TxtArticulo.getText().toUpperCase()));
               collection.updateOne(Filters.eq("CODIGO",this.codigo),Updates.set("COSTO",costo));
               collection.updateOne(Filters.eq("CODIGO",this.codigo),Updates.set("PRECIO",precio));
               collection.updateOne(Filters.eq("CODIGO",this.codigo),Updates.set("STOCK.MINIMO",minimo));
               collection.updateOne(Filters.eq("CODIGO",this.codigo),Updates.set("STOCK.ACTUAL",actual));
        JOptionPane.showMessageDialog(null,"Registro actualizado");
        this.dispose();
        INVENTARIO n=new INVENTARIO();
        n.setVisible(true);
    }//GEN-LAST:event_BtnAceptarActionPerformed

    private void TxtPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtPrecioKeyTyped
        char caracter = evt.getKeyChar();
        if (((caracter < '0') || (caracter > '9'))
                && (caracter != KeyEvent.VK_BACK_SPACE)
                && (caracter != '.' || TxtPrecio.getText().contains("."))) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_TxtPrecioKeyTyped

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JButton BtnAceptar;
    private javax.swing.JTextField TxtArticulo;
    private javax.swing.JTextField TxtCosto;
    private javax.swing.JTextField TxtPrecio;
    private javax.swing.JTextField TxtStockActual;
    private javax.swing.JTextField TxtStockMin;
    private javax.swing.JTextField TxtTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables


private boolean valido() {
        if (TxtArticulo.getText().isEmpty()
                || TxtTipo.getText().isEmpty()
                || TxtStockMin.getText().isEmpty()
                || TxtStockActual.getText().isEmpty()
                || TxtCosto.getText().isEmpty()
                || TxtPrecio.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Registre la información necesaria");
            return false;
        } else {
            try {
                double costo = Double.parseDouble(TxtCosto.getText());
                double precio = Double.parseDouble(TxtPrecio.getText());
                double minimo = Double.parseDouble(TxtStockMin.getText());
                double actual = Double.parseDouble(TxtStockActual.getText());
                if (costo < 0 || precio < 0 || minimo < 0 || actual < 0) {
                    JOptionPane.showMessageDialog(null, "Introduzca valores válidos para precio, costo y stock");
                    return false;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Introduzca valores válidos para precio, costo y stock");
                return false;
            }
        }
        return true;
    }



}
